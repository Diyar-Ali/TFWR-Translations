@error_missing_default_parameter = 모든 default argument는 argument 목록의 끝에 있어야 해.
@error_invalid_name = {0}은(는) 유효하지 않은 이름입니다. 이름은 반드시 문자로 시작해야 하며, 문자, 숫자, 밑줄만 포함할 수 있습니다. 또한 예약어는 사용이 불가합니다.
@error_reserved_keyword = {0}는 예약된 키워드입니다. 이름으로 사용할 수 없습니다.
@error_invalid_assign_expr = 이 표현식에 값을 할당할 수 없습니다.
@error_no_statements = 코드 블록에는 적어도 한 개의 문이 있어야 해.  
문은 `harvest()` 같은 함수 호출이나 변수 할당일 수 있어.  
코드 블록에서 아무것도 하지 않으려면 `pass` 문을 사용해.
@error_not_enough_indentation = 여기 들여쓰기가 부족해.  
새로운 코드 블록을 구분하려면 : 뒤에 더 많은 들여쓰기가 필요해.  
Tab 키를 사용해서 코드를 들여쓰기 해봐.
@error_too_much_indentation = 여기 들여쓰기가 너무 많아요.  
코드 블록 내 모든 문장의 들여쓰기가 동일해야 해요.
@error_not_a_statement = 이것은 올바른 문장이 아닙니다.
@error_not_a_statement2 = 이것은 유효한 문장이 아닙니다. {0}(으)로 작성하려고 했나요?
@error_invalid_expression = 이것은 올바른 표현이 아닙니다.
@error_new_line_expected = 새로운 줄이 예상됩니다.
@error_unexpected_token = 여기에는 {0}가 필요해.
@error_missing_colon = 모든 코드 블록의 시작 부분에는 `:`이 있어야 해.
@error_unexpected_assign = 여기서는 할당을 할 수 없습니다. 동등성을 확인하려면 `==`를 사용하세요.
@error_invalid_for_syntax = 이것은 유효한 `for` 루프가 아닙니다. `for` 루프는 다음과 같이 생겼습니다:
`for n in range(3):`
`for` 다음에는 항상 루프 변수, `in` 그리고 시퀀스가 옵니다. 이 예시에서 `n`은 변수 이름이지만, 다른 이름으로 바꿀 수 있습니다.
@error_unknown_method = 이 메서드는 존재하지 않습니다.
@error_bad_backslash = 백슬래시를 사용하여 여러 줄에 걸쳐 표현식을 나눌 수 있어. 하지만 그 뒤에는 반드시 새 줄을 추가해야 해.
@error_mixed_indentation = 탭과 스페이스를 혼용해서는 안 됩니다.
@error_expected_close_token = 쉼표나 닫는 괄호가 필요해요.
@error_wrong_dict_literal = dictionary의 키와 값을 구분하기 위해 :이 필요합니다.
@error_assign_before_global = {0}는 global 선언 전에 할당됩니다.
@error_wildcard_imports_not_allowed_in_function = 함수 내에서 `from x import *` 형식의 임포트는 허용되지 않습니다.
@error_invalid_import = 파일 이름이 유효한 식별자가 아닐 경우 파일을 import할 수 없습니다. 유효한 식별자는 문자, 숫자, 그리고 밑줄만 포함할 수 있습니다. 파일 이름에 다른 문자가 포함되어 있다면, 이름을 변경해야 합니다.